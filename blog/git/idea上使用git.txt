1，idea中对git的操作
    1)idea中修改被git管理的文件的颜色变化
        点击settings，点击版本控制，点击文件状态颜色(我这里是使用翻译软件翻译的，你们应该为英文名),在此处设置文件状态的颜色
        下面是我个人设置的文件状态颜色
            红色表示被忽略的文件，并不提交到仓库中
            黄色表示该文件未被git管理
            白色表示该文件已经提交至版本库中
            蓝色表示该文件已经提交至暂存区
            粉色表示该文件已经提交过版本库中，但又被修改了。这种文件已经存在暂存区，直接提交至本地仓库即可

    2)idea中将文件提交至暂存区或者提交至本地仓库
        选择文件，右击，选择Git，选择添加(add),即可将文件添加至暂存区，选择提交文件(commit file)即可将文件提交至本地仓库

    3)idea中切换本地仓库版本
        点击git窗口，点击日志，选择要切换的版本后右键，选择"checkout revision 版本号"，我idea装了翻译插件，显示"签出修订 版本号"
        点击后，即可切换版本

    4)idea中创建分支，切换分支
        idea右下角，可以进行创建分支，切换分支

    5)idea中合并分支，合并分支分为正常合并，冲突合并
        正常合并：点击右下角Git分支管理，切换到master分支，选择要被合并的分支，点击"Merge into current"，表示将该分支与master分支合并
        冲突合并，例如master分支和hot-fix分支各自提交了一次版本后，再次合并会发生冲突，需要我们手动更改冲突，
            冲突合并的操作和正常合并一样，不过会存在手动修改冲突的情况，修改好冲突后，即可提交至本地仓库

2，idea中集成github
    1)idea连接github
        使用idea连接github，点击设置，点击版本控制，在版本控制一栏中有github，在此处登录自己的github即可
        如果使用账号密码登录不上去，使用token登录，token需要在github的Settings的Developer settings的Personal access tokens生成

    2)idea中创建远程项目，并将本项目推送到远程仓库
        打开VCS窗口，点击"import into Version Control"(我使用翻译插件的原因，点击导入到版本控制)，
        再点击Share Project on Github,分享到github就是在github上创建远程项目，并把本项目推送到远程项目

    3)idea中推送本地仓库中代码到远程仓库中
        在2)中，idea仓库中已经推送代码到github上了，如果再次修改了idea中项目的代码又是如何推送到远程仓库呢？
        打开VCS窗口，选择Git一栏，选择push(推送)，将已修改的本地仓库推送到github
        注意：将本地仓库推送到远程仓库，有一个前提，前提是本地代码必须比远程仓库代码版本高，如果本地仓库版本低于远程仓库版本
            则会push失败，此时，我们需要先拉取远程仓库代码，使得本地仓库代码与远程仓库代码一致，然后再修改文件，提交代码到本地仓库
            最后再推送代码到远程仓库中。这样可以保证本地仓库比远程仓库版本高。

    4)pull拉取远程库到本地库中
        打开VCS窗口，选择Git一栏，选择pull(拉取)，将远程仓库代码拉取到本地库中
        注意：拉取远程仓库代码之前不要修改本地仓库代码，如果远程仓库代码和本地库代码不一致，会自动进行合并，
            如果合并失败，还会涉及到手动解决冲突的问题

    5)clone克隆远程库到本地
        在idea开始界面时，选择"Git from Version Control"，克隆远程仓库代码到本地中
        输入仓库的链接，即可克隆项目

3，idea中集成码云
    码云，国内代码托管中心，https://gitee.com，idea中集成码云，需要安装码云插件
    安装好码云波插件后，打开settings中版本控制，即可看到Gitee选项
    idea中使用码云托管代码的操作和使用github一样，只需要注意推送/拉取时选择好正确的远程库链接。

4，自建代码托管平台-GitLab
    Gitlab是局域网的代码托管中心，我们需要使用linux服务器，配置好gitlab，即gitlab服务器
    配置好后，相当于搭建了一个像github，码云一样的代码托管平台，我们就可以推送代码到gitlab上。
    当然了，idea还是需要安装好gitlab插件并且配置好gitlab服务器地址。
    idea连接好gitlab服务器后，其他操作就和使用github，码云一样。

5，github协作开发
    团队内协作开发
        如果想要和其他人一同开发同一个项目，可以在该项目中的settings中，点击"Manage access"
        然后点击邀请他人作为伙伴("invite a collaborator"),输入想要邀请对象的用户名，
        然后复制邀请函(就是一个链接，Pending invite),复制后，发给被邀请对象，然后被邀请对象打开这个邀请链接后
        选择"Accept invitation"接收邀请，接收邀请之后，被邀请对象就可向该项目推送项目了。
    跨团队协作开发
        有时候，如果想给其他开源项目提交一些建议，修改一些更好的功能，但并不是人家开源项目组的成员
        那该如何向他人提供你的修改代码呢？你可以fork别人的项目，然后修改好代码后提交到自己的远程仓库，
        再点击"Pull requests"中的"New pull request"，创建拉取请求，请求别人合并(merge)你的代码
        这个时候别人会收到你的pull request,会审核你的代码，然后考虑时候合并你的代码，如果别人同意合并后
        别人的项目上就会出现你修改的代码。









